akka {
  loglevel = INFO

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
    }
  }
  remote {
    maximum-payload-bytes = 10000000 bytes
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = {{ woken_marathon_host }} # external (logical) hostname
      port = {{ woken_akka_port }} # external (logical) port

{% if woken_validation_docker_network == 'BRIDGE' %}
      bind-hostname = localhost     # internal (bind) hostname
      bind-port = 8088              # internal (bind) port
{% endif %}

      message-frame-size =  10000000b
      send-buffer-size =  10000000b
      receive-buffer-size =  10000000b
      maximum-frame-size = 10000000b
    }
  }
  cluster {

    seed-nodes = [
      "akka.tcp://woken@127.0.0.1:8088"
    ]

    roles = ["woken"]
  }
}

spray.can.server {
  idle-timeout = 300s
  request-timeout = 180s
}

app {
  systemName = "woken"
  jobServiceName = "job-service"
  interface = "0.0.0.0"
  port = {{ woken_http_port }}
}

jobs {
  node = "{{ inventory_hostname }}"
  owner = "admin@mip.chuv.ch"
  chronosServerUrl = "{{ internal_chronos_url }}"
{% if woken_role == 'mip_federation' %}
  federationDb = "federation"
  nodes = {
{% for node in woken_nodes %}
    {{ node.name }} {
      jobsUrl = "{{ node.url}}"
    }
{% endfor %}
  }
{% else %}
  ldsmDb = "ldsm"
{% endif %}
  resultDb = "analytics"
}

db {
  analytics {
    jdbc_driver="{{ analytics_db_jdbc_driver }}"
    jdbc_jar_path="{{ analytics_db_jdbc_jar }}"
    jdbc_url="{{ analytics_db_jdbc_url }}"
    jdbc_user="{{ analytics_db_user }}"
    jdbc_password="{{ analytics_db_password }}"
  }

{% if woken_role == 'mip_federation' %}
  federation {
    jdbc_driver="{{ federation_db_jdbc_driver }}"
    jdbc_jar_path="{{ federation_db_jdbc_jar }}"
    jdbc_url="{{ federation_db_jdbc_url }}"
    jdbc_user="{{ federation_db_user }}"
    jdbc_password="{{ federation_db_password }}"
  }
{% else %}
  ldsm {
    jdbc_driver="{{ ldsm_db_jdbc_driver }}"
    jdbc_jar_path="{{ ldsm_db_jdbc_jar }}"
    jdbc_url="{{ ldsm_db_jdbc_url }}"
    jdbc_user="{{ ldsm_db_user }}"
    jdbc_password="{{ ldsm_db_password }}"
  }
{% endif %}
}

defaultSettings {
  # Default settings for the request service
  request {
    nodes = {}
{% if woken_role == 'mip_federation' %}
    inDb = "federationDb"
{% else %}
    inDb = "ldsm"
{% endif %}
    outDb = "analytics"
    mainTable = "{{ woken_main_table }}"

    functions {
{% for fn in woken_functions %}
      {{ fn.name }} = {
        image = "{{ fn.docker_image }}"
        predictive = "{{ fn.predictive }}"
      }
{% endfor %}
    }
  }
}
