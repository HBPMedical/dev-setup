---

- name: Wait for Marathon
  include: "{{ mipmap_db_path_to_lib_role }}/marathon-app/tasks/wait-for-marathon.yml"
  vars:
    uri: "{{ internal_marathon_url }}"
  tags:
    - launch

- name: Remove old MipMap database using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ mipmap_db_marathon_id }}"
    state: "absent"
    wait_timeout: 600
  async: 600
  poll: 1
  delegate_to: "{{ groups['control'][0] }}"
  tags:
    - launch

- name: Optional cleanup
  file: state=absent path={{ mipmap_db_data_dir }}
  when: mipmap_db_cleanup

# Postgres user in Docker appears as user 999 outside
- name: Create MipMap database storage directory
  file: state=directory path={{ mipmap_db_data_dir }} mode=0700 owner={{ mipmap_db_docker_user }} group={{ mipmap_db_docker_user }}

- name: Launch MipMap database using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ mipmap_db_marathon_id }}"
    state: "present"
    docker_image: "{{ mipmap_db_image }}:{{ mipmap_db_version }}"
    docker_force_pull_image: true
    docker_network: BRIDGE
    docker_port_mappings:
      - hostPort: '{{ mipmap_db_port }}'
        containerPort: 5432
        name: 'postgres'
        protocol: 'tcp'
    container_volumes: '{{ mipmap_db_volumes }}'
    env: '{{ mipmap_db_env }}'
    labels:
      MARATHON_SINGLE_INSTANCE_APP: "true"
      DATABASES: "{{ mipmap_db_databases }}"
    instances: 1
    cpus: '{{ mipmap_db_cpus }}'
    mem: '{{ mipmap_db_mem }}'
    ports: [] # defined in docker_port_mappings
    require_ports: true
    constraints: [["hostname", "CLUSTER", "{{ mipmap_db_marathon_host }}"]]
    dependencies: []
    executor: ""
    health_checks:
      - protocol: COMMAND
        command:
          value: "{{ mipmap_db_is_ready }} -U {{ mipmap_db_user }} -p 5432"
        gracePeriodSeconds: 300
        intervalSeconds: 20
        timeoutSeconds: 10
        maxConsecutiveFailures: 5
    upgrade_strategy_minimum_health_capacity: 0.0
    upgrade_strategy_maximum_over_capacity: 0.0
    wait_timeout: 600
  async: 600
  poll: 1
  delegate_to: "{{ groups['control'][0] }}"
  tags:
    - launch
