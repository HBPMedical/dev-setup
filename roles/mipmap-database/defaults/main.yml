---

# Deploy mipmap-db as an independent database. If false, then we assume that there is
# a database already running and we add to it a new 'mipmap' schema
mipmap_db_deploy: no

# Used when mipmap_db_deploy is true
mipmap_db_marathon_id: /data-factory/mipmap-db

# Pin the database to a particular host as it needs to store its files in a known place. The hostname should be the name known by Marathon / Mesos
mipmap_db_marathon_host: '{{ ansible_fqdn }}'

# The user running the Docker container for Postgres, default to '999' (postgres user in the Postgres docker container)
# TODO: use user remapping when this functionality will be available per run (not possible today with Docker 1.12)
mipmap_db_docker_user: '999'

mipmap_db_image: 'postgres'
postgres_version: "9.5.4"
mipmap_db_version: "{{ postgres_version }}"
postgres_is_ready: "/usr/local/bin/pg_isready"
mipmap_db_is_ready: "{{ postgres_is_ready }}"

mipmap_db_cpus: 0.5
mipmap_db_mem: 512.0

# Port exposed by Marathon, must be in the range [4000, 5000[, [31000,32000[
mipmap_db_port: 4606
mipmap_db_host: '{{ mipmap_db_marathon_host }}'
mipmap_db_name: mipmap
mipmap_db_admin_user: 'postgres'
# TO FILL - mipmap_db_admin_password:
mipmap_db_user: mipmap
# TO FILL - mipmap_db_password: mipmap

# Hint in Marathon listing all the databases running in this Postgres server,
# used when mipmap_db_deploy is true
mipmap_db_databases: "{{ mipmap_db_name }}"

mipmap_db_data_dir: /srv/docker/mipmap_db/data

mipmap_db_volumes:
  - containerPath: "/var/lib/postgresql/data"
    hostPath: "{{ mipmap_db_data_dir }}"
    mode: RW

mipmap_db_env:
  POSTGRES_USER: "{{ mipmap_db_admin_user }}"
  POSTGRES_PASSWORD: "{{ mipmap_db_admin_password }}"

# Force cleanup of the mipmap DB. Please never use that in production!
mipmap_db_cleanup: false

# path to lib_role
mipmap_db_path_to_lib_role: "{{ lib_roles_path|default(playbook_dir + '/roles') }}"

# URL to marathon master internal to the current cluster. You need to ensure that Ansible can reach that URL.
internal_marathon_url: http://localhost:5080

mipmap_db_config_file: '/etc/mipmap/postgresdb.properties'
