---

- name: Should research-db be deployed in its own Postgres server?
  set_fact:
    do_research_db_deploy: "{{ research_db_deploy | bool }}"

- include: marathon.yml
  when: do_research_db_deploy

# run this task on the database host
- name: Wait for the database to be up and running
  wait_for: >
    port="{{ research_db_port }}"
    delay=2

- name: Drop database with name "research"
  postgresql_db:
    name: "{{ research_db_name }}"
    port: "{{ research_db_port }}"
    login_host: "{{ research_db_host }}"
    login_user: "{{ research_db_admin_user }}"
    login_password: "{{ research_db_admin_password }}"
    state: absent
  delegate_to: "{{ groups['control'][0] }}"
  when: (not do_research_db_deploy) and research_db_cleanup

- name: Create a new database with name "research"
  postgresql_db:
    name: "{{ research_db_name }}"
    port: "{{ research_db_port }}"
    login_host: "{{ research_db_host }}"
    login_user: "{{ research_db_admin_user }}"
    login_password: "{{ research_db_admin_password }}"
    state: present
  delegate_to: "{{ groups['control'][0] }}"

- name: Create research user
  postgresql_user:
    login_host: "{{ research_db_host }}"
    login_user: "{{ research_db_admin_user }}"
    login_password: "{{ research_db_admin_password }}"
    db: "{{ research_db_name }}"
    port: "{{ research_db_port }}"
    name: "{{ research_db_user }}"
    password: "{{ research_db_password }}"
    role_attr_flags: "SUPERUSER"
  delegate_to: "{{ groups['control'][0] }}"

- name: Log into private Docker registries
  docker_login:
    username: '{{ item.username }}'
    password: '{{ item.password }}'
    registry_url: '{{ item.url }}'
  with_items: "{{ research_db_docker_registries }}"
  no_log: true

- name: Setup Research database
  docker_container:
    name: setup_research_db
    image: "{{ item.image }}"
    command: "{{ item.command | default(ommit) }}"
    env: "{{ item.env }}"
    detach: no
    network_mode: host
    interactive: yes
    cleanup: yes
  with_items: "{{ research_db_docker_setup }}"
  delegate_to: "{{ groups['control'][0] }}"
