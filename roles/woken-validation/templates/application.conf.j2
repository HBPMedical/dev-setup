akka {
  log-dead-letters = 1
  log-dead-letters-during-shutdown = off
  loglevel = INFO

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
    }
  }
  remote {
    maximum-payload-bytes = 10000000 bytes
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
{% if woken_validation_docker_network == 'BRIDGE' %}
      hostname = localhost # external (logical) hostname
      port = {{ woken_validation_akka_port }} # external (logical) port

      bind-hostname = localhost     # internal (bind) hostname
      bind-port = 4082              # internal (bind) port
{% else %}
      hostname = {{ woken_validation_marathon_host }} # external (logical) hostname
      port = {{ woken_validation_akka_port }} # external (logical) port

      bind-hostname = "{{ woken_validation_marathon_host }}"
      bind-port = {{ woken_validation_akka_port }} # Network interface will be bound to the woken_validation_akka_port port,
                     # and remoting protocol will expect messages sent to the bound port
{% endif %}

      message-frame-size =  10000000b
      send-buffer-size =  10000000b
      receive-buffer-size =  10000000b
      maximum-frame-size = 10000000b
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://woken@{{ woken_marathon_host }}:{{ woken_akka_port }}"
    ]

    roles = ["validation"]
  }
}
