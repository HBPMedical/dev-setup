---

- name: Wait for Marathon
  include: ../../marathon-app/tasks/wait-for-marathon.yml
  vars:
    uri: "{{ internal_marathon_url }}"

- name: Delete old woken validation app using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ woken_validation_marathon_id }}"
    state: "absent"
    wait_timeout: 600
  async: 600
  poll: 1
  delegate_to: "{{ groups['control'][0] }}"

- name: Launch woken validation using Marathon
  marathon_app:
    uri: "{{ internal_marathon_url }}"
    id: "{{ woken_validation_marathon_id }}"
    state: "present"
    docker_image: "{{ woken_validation_docker_image }}"
    docker_force_pull_image: true
    docker_network: BRIDGE
    docker_port_mappings:
      - hostPort: "{{ woken_validation_http_port }}"
        containerPort: 8081
        protocol: 'tcp'
        name: 'http'
      - hostPort: "{{ woken_validation_akka_port }}"
        containerPort: "{{ woken_validation_akka_port }}"
        protocol: 'tcp'
        name: 'akka'
    docker_parameters: '{{ woken_validation_docker_parameters }}'
    env: '{{ woken_validation_env }}'
    instances: 1
    cpus: '{{ woken_validation_cpus }}'
    mem: '{{ woken_validation_mem }}'
    ports: []
    require_ports: true
    constraints: '{{ woken_validation_marathon_constraints }}'
    dependencies: '{{ woken_validation_dependencies }}'
    executor: ""
    wait_timeout: 600
    health_checks:
      - protocol: "{% if marathon_version | version_compare('1.4', '>=') %}MESOS_HTTP{% else %}HTTP{% endif %}"
        portName: 'http'
        path: "/health"
        gracePeriodSeconds: 300
        intervalSeconds: 60
        timeoutSeconds: 20
        maxConsecutiveFailures: 2
    readinessChecks:
      - protocol: "HTTP"
        path: "/readiness"
        intervalSeconds: 30
        portName: "http"
        timeoutSeconds: 20
    upgrade_strategy_minimum_health_capacity: 0.0
    upgrade_strategy_maximum_over_capacity: 0.0
  async: 600
  poll: 1
  delegate_to: "{{ groups['control'][0] }}"
  run_once: true
