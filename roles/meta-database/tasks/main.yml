---

- include: marathon.yml
  when: meta_db_deploy

- name: Install Python psycopg2 module for Postgres (required by postgresql_db task), pip and curl
  apt: name={{ item }} state=present
  with_items:
    - python-psycopg2
    - python-pip
    - curl
  when: ansible_os_family == 'Debian'
  delegate_to: "{{ groups['control'][0] }}"
  become: True

# run this task on the database host
- name: Wait for the meta database to be up and running
  wait_for: >
    port="{{ meta_db_port }}"
    delay=2

- name: Drop database with name "meta"
  postgresql_db:
    name: "{{ meta_db_name }}"
    port: "{{ meta_db_port }}"
    login_host: "{{ meta_db_host }}"
    login_user: "{{ meta_db_admin_user }}"
    login_password: "{{ meta_db_admin_password }}"
    state: absent
  delegate_to: "{{ groups['control'][0] }}"
  when: (not meta_db_deploy) and meta_db_cleanup

- name: Create a new database with name "meta"
  postgresql_db:
    name: "{{ meta_db_name }}"
    port: "{{ meta_db_port }}"
    login_host: "{{ meta_db_host }}"
    login_user: "{{ meta_db_admin_user }}"
    login_password: "{{ meta_db_admin_password }}"
    state: present
  delegate_to: "{{ groups['control'][0] }}"

- name: Create meta user
  postgresql_user:
    login_host: "{{ meta_db_host }}"
    login_user: "{{ portal_db_admin_user }}"
    login_password: "{{ portal_db_admin_password }}"
    db: "{{ meta_db_name }}"
    port: "{{ meta_db_port }}"
    name: "{{ meta_db_user }}"
    password: "{{ meta_db_password }}"
    role_attr_flags: "SUPERUSER"
  delegate_to: "{{ groups['control'][0] }}"

- name: Create setup dir for the meta database
  file:
    state: directory
    path: "{{ meta_db_setup_dir }}"
  delegate_to: "{{ groups['control'][0] }}"

- name: Copy sql creation scripts
  copy:
    src: "{{ item.src }}"
    dest: "{{ meta_db_setup_dir }}/{{ item.dest }}"
  with_items:
    - src: "{{ meta_db_local_project_dir }}/sql/create.sql"
      dest: "V1_0__Create.sql"
  delegate_to: "{{ groups['control'][0] }}"

# See https://github.com/anarcher/ansible-docker-registry/issues/1
- name: Make sure pip upgraded
  command: easy_install -U pip
  when: ansible_os_family == 'Debian'
  delegate_to: "{{ groups['control'][0] }}"
  become: True

- name: Install Python module for Docker (required by docker_container task)
  pip: name=docker-py state=present
  delegate_to: "{{ groups['control'][0] }}"

- name: Run Flyway migration on meta-db
  docker_container:
    name: migrate_meta_db
    image: "lren/flyway:{{ flyway_version }}"
    command: migrate
    detach: no
    network_mode: host
    interactive: yes
    # cleanup: yes
    volumes:
      - '{{ meta_db_setup_dir }}:/flyway/sql'
    env:
      FLYWAY_DBMS: postgresql
      FLYWAY_HOST: '{{ meta_db_host }}'
      FLYWAY_PORT: '{{ meta_db_port }}'
      FLYWAY_DATABASE_NAME: '{{ meta_db_name }}'
      FLYWAY_SCHEMAS: "public"
      FLYWAY_USER: '{{ portal_db_admin_user }}'
      FLYWAY_PASSWORD: '{{ portal_db_admin_password }}'
      FLYWAY_DRIVER: 'org.postgresql.Driver'
  delegate_to: "{{ groups['control'][0] }}"
